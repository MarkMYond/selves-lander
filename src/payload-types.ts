/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {
    content: ContentBlock;
    imageBlock: ImageBlock;
    featureSection: FeatureSection;
    clientLogos: ClientLogosBlock;
    solutionsList: SolutionsListBlock;
    aiSupportSection: AiSupportSectionBlock;
    supportNinjaSection: SupportNinjaSectionBlock;
    textImageSection: TextImageSectionBlock;
    approachTabs: ApproachTabs;
    customizedApproach: CustomizedApproach;
    caseStudySection: CaseStudySection;
    ctaSection: CtaSection;
    productFeatures: ProductFeaturesBlock;
    sectorsSection: SectorsSectionBlockPayload;
    scheduleCallSection: ScheduleCallBlockPayload;
    pricingPlans: PricingPlansBlock;
    home03Hero: Home03HeroBlock;
    brandLogos: BrandLogosBlock;
    benefitsSection: BenefitsSectionBlock;
    faqSection: FaqSectionBlock;
    dashboardSection: DashboardSectionBlockV2;
    whatMakesUsDifferentSection: WhatMakesUsDifferentSection;
    integrationsSection: IntegrationsSection;
    testimonialsSection: TestimonialsSectionBlock;
    featuresWithIntroSection: FeaturesWithIntroSectionBlock;
    heroSection02: HeroSection02Payload;
    WhyChooseUsSection: WhyChooseUsSection;
    HeroBlogCard: HeroBlogCardBlock;
    RecentArticles: RecentArticlesBlock;
    ContactForm: ContactFormBlock;
  };
  collections: {
    users: User;
    media: Media;
    categories: Category;
    'web-pages': WebPage;
    'wiki-pages': WikiPage;
    'registry-pages': RegistryPage;
    'navigation-cache': NavigationCache;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    'web-pages': WebPagesSelect<false> | WebPagesSelect<true>;
    'wiki-pages': WikiPagesSelect<false> | WikiPagesSelect<true>;
    'registry-pages': RegistryPagesSelect<false> | RegistryPagesSelect<true>;
    'navigation-cache': NavigationCacheSelect<false> | NavigationCacheSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    footer: Footer;
  };
  globalsSelect: {
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "imageBlock".
 */
export interface ImageBlock {
  image: string | Media;
  caption?: string | null;
  width?: ('100' | '75' | '50' | '25') | null;
  alignment?: ('left' | 'center' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureSection".
 */
export interface FeatureSection {
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  superTitle?: string | null;
  title: string;
  /**
   * Select the display style for the title. "Large" matches the homepage hero title size.
   */
  titleStyle?: ('standard' | 'large') | null;
  description?: string | null;
  image?: (string | null) | Media;
  button?: {
    text: string;
    url: string;
    style: 'primary' | 'secondary';
  };
  includeButton?: boolean | null;
  /**
   * Check this to remove the default bottom padding from this section.
   */
  removeBottomPadding?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ClientLogosBlock".
 */
export interface ClientLogosBlock {
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  title?: string | null;
  logos?:
    | {
        logo: string | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'clientLogos';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SolutionsListBlock".
 */
export interface SolutionsListBlock {
  title?: string | null;
  description?: string | null;
  /**
   * Optional image displayed at the top right of the section.
   */
  sectionImage?: (string | null) | Media;
  solutions?:
    | {
        /**
         * Enter the exact name of a Phosphor icon (e.g., UsersThree, ChartLineUp). See phosphoricons.com for names. Case matters.
         */
        iconName: string;
        solutionTitle: string;
        solutionDescription: string;
        link: {
          text: string;
          url: string;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  /**
   * Removes all top padding for this section.
   */
  removeTopPadding?: boolean | null;
  /**
   * Removes all bottom padding for this section.
   */
  removeBottomPadding?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'solutionsList';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AiSupportSectionBlock".
 */
export interface AiSupportSectionBlock {
  title?: string | null;
  description?: string | null;
  benefits?:
    | {
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  link: {
    text: string;
    url: string;
    style: 'primary' | 'secondary';
  };
  /**
   * Optional. Enter the exact name of a Phosphor icon (e.g., CheckCircle, Check). See phosphoricons.com.
   */
  checkmarkIconName?: string | null;
  characterImage?: (string | null) | Media;
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  /**
   * Determines if the character illustration appears on the left or right of the text content.
   */
  imagePosition?: ('right' | 'left') | null;
  /**
   * Reduces the standard top padding for this section by half.
   */
  reduceTopPadding?: boolean | null;
  /**
   * Reduces the standard bottom padding for this section by half.
   */
  reduceBottomPadding?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'aiSupportSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SupportNinjaSectionBlock".
 */
export interface SupportNinjaSectionBlock {
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  title?: string | null;
  description?: string | null;
  image: string | Media;
  ctaButton: {
    text: string;
    url: string;
    style: 'primary' | 'secondary';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'supportNinjaSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextImageSectionBlock".
 */
export interface TextImageSectionBlock {
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  removeTopPadding?: boolean | null;
  removeBottomPadding?: boolean | null;
  title?: string | null;
  /**
   * Select the display style for the title. "Large" matches the homepage hero title size.
   */
  titleStyle?: ('standard' | 'large') | null;
  description?: string | null;
  image?: (string | null) | Media;
  imagePosition: 'left' | 'right';
  /**
   * Select a background color for the image container. Defaults to None (Transparent).
   */
  imageBackgroundColor?:
    | (
        | 'none'
        | 'brandTheme-01'
        | 'brandTheme-02'
        | 'brandTheme-03'
        | 'brandTheme-04'
        | 'brandNeutral-01'
        | 'brandNeutral-02'
        | 'brandNeutral-03'
        | 'brandNeutral-04'
        | 'white'
      )
    | null;
  buttons?:
    | {
        text: string;
        url: string;
        style: 'primary' | 'secondary';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'textImageSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "approachTabs".
 */
export interface ApproachTabs {
  title?: string | null;
  tabs?:
    | {
        tabTitle: string;
        /**
         * Enter each step on a new line.
         */
        steps: string;
        id?: string | null;
      }[]
    | null;
  link?: {
    text?: string | null;
    url?: string | null;
  };
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'approachTabs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customizedApproach".
 */
export interface CustomizedApproach {
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  title?: string | null;
  description?: string | null;
  approachTabsData: {
    title?: string | null;
    tabs?:
      | {
          tabTitle: string;
          /**
           * Enter each step on a new line.
           */
          steps: string;
          id?: string | null;
        }[]
      | null;
    link?: {
      text?: string | null;
      url?: string | null;
    };
    /**
     * Select the background color.
     */
    sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
    /**
     * Select the background color.
     */
    contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
    /**
     * Select the maximum width for the content container within this block.
     */
    containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'approachTabs';
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'customizedApproach';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "caseStudySection".
 */
export interface CaseStudySection {
  title?: string | null;
  caseStudies?:
    | {
        image: string | Media;
        title: string;
        link: string;
        /**
         * Optional: e.g., bg-blue-100. Leave blank for default (white).
         */
        bgColor?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  removeTopPadding?: boolean | null;
  removeBottomPadding?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'caseStudySection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ctaSection".
 */
export interface CtaSection {
  ctaSubTitle?: string | null;
  ctaTitle?: string | null;
  ctaButtons?:
    | {
        text: string;
        url: string;
        style?: ('primary' | 'secondary') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ctaSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductFeaturesBlock".
 */
export interface ProductFeaturesBlock {
  /**
   * Select the background color.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color.
   */
  imageColumnBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the maximum width for the content container within this block.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  features: {
    title: string;
    description?: string | null;
    /**
     * Image displayed when this feature is selected.
     */
    image: string | Media;
    id?: string | null;
  }[];
  /**
   * Image displayed initially before any feature is selected.
   */
  defaultImage: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productFeatures';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectorsSectionBlockPayload".
 */
export interface SectorsSectionBlockPayload {
  /**
   * Controls the overall background color of the section.
   */
  sectionBackgroundColor?: ('white' | 'light-grey' | 'brand-50' | 'brand-900' | 'brand-primary') | null;
  /**
   * Controls the background color of the inner content area (within padding).
   */
  contentBackgroundColor?: ('white' | 'light-grey' | 'brand-50' | 'brand-900' | 'brand-primary') | null;
  /**
   * Sets the maximum width of the content container.
   */
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  content?: {
    superTitle?: string | null;
    title?: string | null;
    description?: string | null;
    ctaText?: string | null;
    ctaUrl?: string | null;
  };
  sectors?:
    | {
        title: string;
        image?: (string | null) | Media;
        /**
         * Enter the name of the icon to display (if image is not used or as an overlay).
         */
        iconName?: string | null;
        /**
         * Select a background color for the sector card.
         */
        backgroundColor?:
          | (
              | 'white'
              | 'default'
              | 'default-gradient'
              | 'primary-25'
              | 'primary-50'
              | 'primary-100'
              | 'primary-200'
              | 'primary-300'
              | 'primary-400'
              | 'primary-500'
              | 'primary-600'
              | 'primary-700'
              | 'primary-800'
              | 'primary-900'
              | 'primary-950'
              | 'sand'
              | 'pink-light'
              | 'coral-light'
              | 'pink-mid'
              | 'purple-light'
              | 'blue-light'
              | 'aqua-light'
              | 'green-light'
              | 'light-green'
              | 'grass-light'
              | 'light-grey'
              | 'navy-dark'
            )
          | null;
        href?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'sectorsSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ScheduleCallBlockPayload".
 */
export interface ScheduleCallBlockPayload {
  sectionBackgroundColor?: ('white' | 'light-grey' | 'brand-50' | 'brand-900' | 'brand-primary') | null;
  containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
  reduceTopPadding?: boolean | null;
  reduceBottomPadding?: boolean | null;
  infoColumn?: {
    infoColumnLogo?: (string | null) | Media;
    infoColumnHeaderLink?: {
      text?: string | null;
      url?: string | null;
    };
    infoColumnMainTitlePart1?: string | null;
    infoColumnMainTitlePart2?: string | null;
    /**
     * CSS height value like "h-20", "auto", or "80px".
     */
    infoColumnTitleContainerDesktopHeight?: string | null;
    infoColumnFooterText?: string | null;
    infoColumnFooterLinks?:
      | {
          text: string;
          url: string;
          id?: string | null;
        }[]
      | null;
  };
  formColumn?: {
    formTitle?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'scheduleCallSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingPlansBlock".
 */
export interface PricingPlansBlock {
  eyebrowText?: string | null;
  title?: string | null;
  mainCtaText?: string | null;
  mainCtaLink?: string | null;
  mainCtaStyle?: ('primary' | 'secondary') | null;
  sectionBackgroundColor?: ('white' | 'light-grey' | 'brand-50' | 'brand-900' | 'brand-primary') | null;
  removeTopPadding?: boolean | null;
  removeBottomPadding?: boolean | null;
  plans?:
    | {
        name: string;
        description?: string | null;
        monthlyPrice?: string | null;
        annualPrice?: string | null;
        priceSuffix?: string | null;
        /**
         * Select a background color for this plan card. Ensure the Tailwind class exists.
         */
        cardBackgroundColor?: ('bg-white' | 'bg-light-grey' | 'bg-sand' | 'bg-brand-50') | null;
        ctaButtonLabel?: string | null;
        ctaButtonLink?: string | null;
        isMostPopular?: boolean | null;
        id?: string | null;
      }[]
    | null;
  sharedFeatures?:
    | {
        featureName: string;
        plan1Availability?: ('included' | 'not_included' | 'custom') | null;
        plan1CustomText?: string | null;
        plan2Availability?: ('included' | 'not_included' | 'custom') | null;
        plan2CustomText?: string | null;
        plan3Availability?: ('included' | 'not_included' | 'custom') | null;
        plan3CustomText?: string | null;
        /**
         * Short explanation for the feature, shown on hover or info icon.
         */
        tooltip?: string | null;
        id?: string | null;
      }[]
    | null;
  compareTableTitle?: string | null;
  compareTableDescription?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pricingPlans';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Home03HeroBlock".
 */
export interface Home03HeroBlock {
  taglinePrefix?: string | null;
  taglineSuffix?: string | null;
  headline: string;
  subheadline?: string | null;
  formPlaceholder?: string | null;
  formButtonText?: string | null;
  imageTopLeft?: (string | null) | Media;
  imageTopRight?: (string | null) | Media;
  imageCenter?: (string | null) | Media;
  imageBottom?: (string | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'home03Hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLogosBlock".
 */
export interface BrandLogosBlock {
  /**
   * Optional title to display above the logos.
   */
  title?: string | null;
  logos?:
    | {
        logoImage: string | Media;
        /**
         * Descriptive text for the logo image (for accessibility).
         */
        altText?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Select the background color for the logo section.
   */
  backgroundColor?: ('dark' | 'light' | 'transparent') | null;
  paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'brandLogos';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BenefitsSectionBlock".
 */
export interface BenefitsSectionBlock {
  eyebrow?: string | null;
  title: string;
  description: string;
  benefitCards?:
    | {
        cardType: 'content' | 'counter';
        contentTitle?: string | null;
        contentDescription?: string | null;
        contentImages?:
          | {
              image: string | Media;
              altText?: string | null;
              id?: string | null;
            }[]
          | null;
        counterValue?: string | null;
        counterText?: string | null;
        counterDescription?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'benefitsSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqSectionBlock".
 */
export interface FaqSectionBlock {
  eyebrow?: string | null;
  /**
   * Select a background color for the eyebrow. Defaults to Theme Color 2.
   */
  eyebrowBackgroundColor?:
    | (
        | 'bg-brandTheme-01'
        | 'bg-brandTheme-02'
        | 'bg-brandTheme-03'
        | 'bg-brandTheme-04'
        | 'bg-brandNeutral-01'
        | 'bg-brandNeutral-04'
      )
    | null;
  /**
   * Optional image to display next to the title/subtitle (on larger screens).
   */
  titleImage?: (string | null) | Media;
  title: string;
  description?: string | null;
  faqs: {
    question: string;
    answer: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DashboardSectionBlockV2".
 */
export interface DashboardSectionBlockV2 {
  eyebrowText?: string | null;
  /**
   * Select a background color for the eyebrow. Defaults to Theme Color 2.
   */
  eyebrowBackgroundColor?:
    | (
        | 'bg-brandTheme-01'
        | 'bg-brandTheme-02'
        | 'bg-brandTheme-03'
        | 'bg-brandTheme-04'
        | 'bg-brandNeutral-01'
        | 'bg-brandNeutral-04'
      )
    | null;
  title: string;
  description: string;
  primaryButton: {
    text: string;
    url: string;
  };
  image: string | Media;
  stats?:
    | {
        icon?: (string | null) | Media;
        label: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'dashboardSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "whatMakesUsDifferentSection".
 */
export interface WhatMakesUsDifferentSection {
  eyebrow?: string | null;
  title: string;
  description?: string | null;
  cards?:
    | {
        icon: string | Media;
        iconBackgroundColor?:
          | ('theme-color-01' | 'theme-color-02' | 'theme-color-03' | 'theme-color-04' | 'neutral-01' | 'neutral-04')
          | null;
        cardTitle: string;
        cardDescription: string;
        additionalCardImages?:
          | {
              imageFile: string | Media;
              altText?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'whatMakesUsDifferentSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrationsSection".
 */
export interface IntegrationsSection {
  eyebrow?: string | null;
  title: string;
  description?: string | null;
  titleImage?: (string | null) | Media;
  logos?:
    | {
        logoImage: string | Media;
        altText?: string | null;
        backgroundColorClass?:
          | (
              | 'theme-color-01'
              | 'theme-color-02'
              | 'theme-color-03'
              | 'theme-color-04'
              | 'purple'
              | 'green'
              | 'yellow'
              | 'purple-light'
              | 'default'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  button: {
    text: string;
    url: string;
    variant?: ('border' | 'primary' | 'secondary' | 'tertiary') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'integrationsSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsSectionBlock".
 */
export interface TestimonialsSectionBlock {
  eyebrowText?: string | null;
  titleImage?: (string | null) | Media;
  title: string;
  description?: string | null;
  caseStudies?:
    | {
        quoteTitle?: string | null;
        quote: string;
        authorName: string;
        /**
         * Upload a square image for the author/person.
         */
        authorImage?: (string | null) | Media;
        authorRole?: string | null;
        /**
         * Upload a square company logo for the top of the card.
         */
        companyLogo?: (string | null) | Media;
        companyLogoBackgroundColor?:
          | (
              | 'theme-color-01'
              | 'theme-color-02'
              | 'theme-color-03'
              | 'theme-color-04'
              | 'purple'
              | 'green'
              | 'yellow'
              | 'purple-light'
              | 'default'
            )
          | null;
        /**
         * Enter the full URL for the case study.
         */
        readMoreLink?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonialsSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesWithIntroSectionBlock".
 */
export interface FeaturesWithIntroSectionBlock {
  /**
   * Select the background color for the entire section.
   */
  sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
  /**
   * Select the background color for the content area within the section padding.
   */
  contentBackgroundColor?: ('none' | 'white' | 'brand-50') | null;
  removeTopPadding?: boolean | null;
  removeBottomPadding?: boolean | null;
  introContent: {
    superTitle?: string | null;
    eyebrowBackgroundColor?:
      | (
          | 'bg-brandTheme-01'
          | 'bg-brandTheme-02'
          | 'bg-brandTheme-03'
          | 'bg-brandTheme-04'
          | 'bg-brandNeutral-01'
          | 'bg-brandNeutral-04'
        )
      | null;
    title: string;
    description?: string | null;
    /**
     * Optional image for the introductory header section.
     */
    titleImage?: (string | null) | Media;
  };
  featureItems?:
    | {
        title?: string | null;
        /**
         * Select the display style for the title. "Large" matches the homepage hero title size.
         */
        titleStyle?: ('standard' | 'large') | null;
        description?: string | null;
        image?: (string | null) | Media;
        imagePosition: 'left' | 'right';
        /**
         * Select a background color for the image container. Defaults to None (Transparent).
         */
        imageBackgroundColor?:
          | (
              | 'none'
              | 'brandTheme-01'
              | 'brandTheme-02'
              | 'brandTheme-03'
              | 'brandTheme-04'
              | 'brandNeutral-01'
              | 'brandNeutral-02'
              | 'brandNeutral-03'
              | 'brandNeutral-04'
              | 'white'
            )
          | null;
        buttons?:
          | {
              text: string;
              url: string;
              style: 'primary' | 'secondary';
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featuresWithIntroSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroSection02Payload".
 */
export interface HeroSection02Payload {
  /**
   * Optional small text displayed above the main heading.
   */
  eyebrowText?: string | null;
  heading?: string | null;
  subheading?: string | null;
  buttons?:
    | {
        label: string;
        variant: 'primary' | 'secondary' | 'tertiary' | 'border';
        type?: ('internal' | 'external') | null;
        internalLink?: (string | null) | WebPage;
        externalLink?: string | null;
        newTab?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * The main image for the hero section.
   */
  heroImage?: (string | null) | Media;
  arrowButtonText?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroSection02';
}
/**
 * General website pages (e.g., Homepage).
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "web-pages".
 */
export interface WebPage {
  id: string;
  title: string;
  /**
   * A unique identifier for the page, used in the URL.
   */
  slug: string;
  /**
   * Optimize your page for search engines and social sharing.
   */
  meta?: {
    /**
     * Custom title for search engines. If blank, the page title will be used.
     */
    title?: string | null;
    /**
     * Brief description of this page for search results and social sharing.
     */
    description?: string | null;
    /**
     * Image used when sharing this page on social media (1200×630px recommended).
     */
    image?: (string | null) | Media;
    /**
     * If checked, this page will not be indexed by search engines.
     */
    noIndex?: boolean | null;
    /**
     * The type of content this page represents (for structured data).
     */
    schemaType?: ('Article' | 'WebPage' | 'FAQPage' | 'Product' | 'Service' | 'Organization') | null;
    /**
     * Comma-separated keywords (optional).
     */
    keywords?: string | null;
    /**
     * Automatically generated Schema.org JSON-LD markup. Can be overridden if needed.
     */
    jsonLD?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  layout: (
    | ContentBlock
    | {
        image: string | Media;
        caption?: string | null;
        width?: ('100' | '75' | '50' | '25') | null;
        alignment?: ('left' | 'center' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'imageBlock';
      }
    | FeatureSection
    | ClientLogosBlock
    | SolutionsListBlock
    | AiSupportSectionBlock
    | SupportNinjaSectionBlock
    | TextImageSectionBlock
    | {
        title?: string | null;
        tabs?:
          | {
              tabTitle: string;
              /**
               * Enter each step on a new line.
               */
              steps: string;
              id?: string | null;
            }[]
          | null;
        link?: {
          text?: string | null;
          url?: string | null;
        };
        /**
         * Select the background color.
         */
        sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
        /**
         * Select the background color.
         */
        contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
        /**
         * Select the maximum width for the content container within this block.
         */
        containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'approachTabs';
      }
    | {
        /**
         * Select the background color.
         */
        sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
        /**
         * Select the background color.
         */
        contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
        /**
         * Select the maximum width for the content container within this block.
         */
        containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
        title?: string | null;
        description?: string | null;
        approachTabsData: {
          title?: string | null;
          tabs?:
            | {
                tabTitle: string;
                /**
                 * Enter each step on a new line.
                 */
                steps: string;
                id?: string | null;
              }[]
            | null;
          link?: {
            text?: string | null;
            url?: string | null;
          };
          /**
           * Select the background color.
           */
          sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
          /**
           * Select the background color.
           */
          contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
          /**
           * Select the maximum width for the content container within this block.
           */
          containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'approachTabs';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'customizedApproach';
      }
    | {
        title?: string | null;
        caseStudies?:
          | {
              image: string | Media;
              title: string;
              link: string;
              /**
               * Optional: e.g., bg-blue-100. Leave blank for default (white).
               */
              bgColor?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Select the background color.
         */
        sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
        /**
         * Select the maximum width for the content container within this block.
         */
        containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
        removeTopPadding?: boolean | null;
        removeBottomPadding?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'caseStudySection';
      }
    | {
        ctaSubTitle?: string | null;
        ctaTitle?: string | null;
        ctaButtons?:
          | {
              text: string;
              url: string;
              style?: ('primary' | 'secondary') | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Select the background color.
         */
        sectionBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
        /**
         * Select the background color.
         */
        contentBackgroundColor?: ('none' | 'white' | 'brand-50' | 'gradient') | null;
        /**
         * Select the maximum width for the content container within this block.
         */
        containerWidth?: ('default' | 'medium' | 'wide' | 'full') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSection';
      }
    | ProductFeaturesBlock
    | SectorsSectionBlockPayload
    | ScheduleCallBlockPayload
    | PricingCardsBlock
    | FeatureComparisonTableBlock
    | Home03HeroBlock
    | BrandLogosBlock
    | BenefitsSectionBlock
    | FaqSectionBlock
    | DashboardSectionBlockV2
    | {
        eyebrow?: string | null;
        title: string;
        description?: string | null;
        cards?:
          | {
              icon: string | Media;
              iconBackgroundColor?:
                | (
                    | 'theme-color-01'
                    | 'theme-color-02'
                    | 'theme-color-03'
                    | 'theme-color-04'
                    | 'neutral-01'
                    | 'neutral-04'
                  )
                | null;
              cardTitle: string;
              cardDescription: string;
              additionalCardImages?:
                | {
                    imageFile: string | Media;
                    altText?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'whatMakesUsDifferentSection';
      }
    | {
        eyebrow?: string | null;
        title: string;
        description?: string | null;
        titleImage?: (string | null) | Media;
        logos?:
          | {
              logoImage: string | Media;
              altText?: string | null;
              backgroundColorClass?:
                | (
                    | 'theme-color-01'
                    | 'theme-color-02'
                    | 'theme-color-03'
                    | 'theme-color-04'
                    | 'purple'
                    | 'green'
                    | 'yellow'
                    | 'purple-light'
                    | 'default'
                  )
                | null;
              id?: string | null;
            }[]
          | null;
        button: {
          text: string;
          url: string;
          variant?: ('border' | 'primary' | 'secondary' | 'tertiary') | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'integrationsSection';
      }
    | TestimonialsSectionBlock
    | FeaturesWithIntroSectionBlock
    | HeroSection02Payload
    | {
        /**
         * Small text appearing above the main title, often styled as a tag.
         */
        eyebrowText?: string | null;
        /**
         * Select a background color for the eyebrow text pill.
         */
        eyebrowBackgroundColor?:
          | (
              | 'bg-brandTheme-01'
              | 'bg-brandTheme-02'
              | 'bg-brandTheme-03'
              | 'bg-brandTheme-04'
              | 'bg-brandNeutral-01'
              | 'bg-brandNeutral-02'
            )
          | null;
        title: string;
        subTitle?: string | null;
        /**
         * This image will appear to the right of the title and subtitle on medium screens and up. It will be hidden on mobile.
         */
        titleImage?: (string | null) | Media;
        cards?:
          | {
              icon: string | Media;
              /**
               * Select a theme color for the icon background.
               */
              iconBackgroundColor?:
                | ('bg-brandTheme-01' | 'bg-brandTheme-02' | 'bg-brandTheme-03' | 'bg-brandTheme-04')
                | null;
              cardTitle: string;
              cardText: string;
              /**
               * If checked, the card will have a colored background (using the Icon Background Color) and the icon will have a white background.
               */
              invertStyle?: boolean | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'WhyChooseUsSection';
      }
    | HeroBlogCardBlock
    | RecentArticlesBlock
    | ContactFormBlock
  )[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingCardsBlock".
 */
export interface PricingCardsBlock {
  eyebrowText?: string | null;
  title?: string | null;
  description?: string | null;
  headerImage?: (string | null) | Media;
  enableBillingToggle?: boolean | null;
  sectionBackgroundColor?: ('white' | 'light-grey' | 'brand-50' | 'brand-900' | 'brand-primary') | null;
  removeTopPadding?: boolean | null;
  removeBottomPadding?: boolean | null;
  plans?:
    | {
        name: string;
        description?: string | null;
        monthlyPrice?: string | null;
        annualPrice?: string | null;
        priceSuffix?: string | null;
        /**
         * Select a background color for this plan card. Popular plans will use Brand Primary by default. "None" also uses the default creamy off-white.
         */
        cardBackgroundColor?:
          | (
              | 'default'
              | 'none'
              | 'bg-brandTheme-01'
              | 'bg-brandTheme-02'
              | 'bg-brandTheme-03'
              | 'bg-brandTheme-04'
              | 'bg-pink-light'
              | 'bg-purple-light'
              | 'bg-brand-primary'
            )
          | null;
        ctaButtonLabel?: string | null;
        ctaButtonLink?: string | null;
        isMostPopular?: boolean | null;
        planSpecificFeatures?:
          | {
              featureText: string;
              isIncluded?: boolean | null;
              tooltip?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  sectionCtaText?: string | null;
  sectionCtaLink?: string | null;
  sectionCtaStyle?: ('primary' | 'secondary') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pricingCards';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureComparisonTableBlock".
 */
export interface FeatureComparisonTableBlock {
  eyebrowText?: string | null;
  title?: string | null;
  description?: string | null;
  headerImage?: (string | null) | Media;
  sectionBackgroundColor?: ('white' | 'light-grey' | 'brand-50' | 'brand-900' | 'brand-primary') | null;
  removeTopPadding?: boolean | null;
  removeBottomPadding?: boolean | null;
  planHeaders?:
    | {
        name: string;
        isMostPopular?: boolean | null;
        id?: string | null;
      }[]
    | null;
  sharedFeatures?:
    | {
        featureName: string;
        /**
         * Corresponds to the first plan defined in Plan Headers.
         */
        plan1Availability?: ('included' | 'not_included' | 'custom') | null;
        plan1CustomText?: string | null;
        /**
         * Corresponds to the second plan defined in Plan Headers (if it exists).
         */
        plan2Availability?: ('included' | 'not_included' | 'custom') | null;
        plan2CustomText?: string | null;
        /**
         * Corresponds to the third plan defined in Plan Headers (if it exists).
         */
        plan3Availability?: ('included' | 'not_included' | 'custom') | null;
        plan3CustomText?: string | null;
        /**
         * Short explanation for the feature, shown on hover or info icon.
         */
        tooltip?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureComparisonTable';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlogCardBlock".
 */
export interface HeroBlogCardBlock {
  /**
   * Optional Webflow animation ID for the main card element (e.g., 504b0f0e-891f-785a-1291-8c4be535afcc)
   */
  animationId?: string | null;
  categoryText: string;
  title: string;
  excerpt: string;
  image: string | Media;
  buttonText: string;
  link: {
    type?: ('internal' | 'external') | null;
    label: string;
    internalLink?: (string | null) | WebPage;
    externalLink?: string | null;
    newTab?: boolean | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'HeroBlogCard';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecentArticlesBlock".
 */
export interface RecentArticlesBlock {
  eyebrowText?: string | null;
  eyebrowBackgroundColor?:
    | (
        | 'theme-color-01'
        | 'theme-color-02'
        | 'theme-color-03'
        | 'theme-color-04'
        | 'purple'
        | 'green'
        | 'yellow'
        | 'purple-light'
        | 'default'
      )
    | null;
  title: string;
  subTitle?: string | null;
  articles?:
    | {
        image: string | Media;
        /**
         * Small text displayed above the article title, styled as a pill (e.g., date or category).
         */
        eyebrowText?: string | null;
        articleEyebrowBackgroundColor?:
          | (
              | 'theme-color-01'
              | 'theme-color-02'
              | 'theme-color-03'
              | 'theme-color-04'
              | 'purple'
              | 'green'
              | 'yellow'
              | 'purple-light'
              | 'default'
            )
          | null;
        articleTitle: string;
        articleExcerpt: string;
        buttonText: string;
        link: {
          type?: ('internal' | 'external') | null;
          label: string;
          internalLink?: (string | null) | WebPage;
          externalLink?: string | null;
          newTab?: boolean | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'RecentArticles';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactFormBlock".
 */
export interface ContactFormBlock {
  contentEyebrow?: string | null;
  contentTitle?: string | null;
  contentDescription?: string | null;
  contentImage?: (string | null) | Media;
  contentImagePosition?: ('above' | 'below') | null;
  /**
   * Optional title displayed directly above the form fields.
   */
  formTitle?: string | null;
  /**
   * Email address where form submissions will be sent.
   */
  recipientEmail: string;
  submitButtonText?: string | null;
  showNameField?: boolean | null;
  requireNameField?: boolean | null;
  showCompanyField?: boolean | null;
  requireCompanyField?: boolean | null;
  showSubjectField?: boolean | null;
  requireSubjectField?: boolean | null;
  showMessageField?: boolean | null;
  requireMessageField?: boolean | null;
  messageFieldLabel?: string | null;
  /**
   * Text that appears before the privacy policy link. The link itself is configured below.
   */
  privacyPolicyText?: string | null;
  link: {
    type?: ('internal' | 'external') | null;
    label: string;
    internalLink?: (string | null) | WebPage;
    externalLink?: string | null;
    newTab?: boolean | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'ContactForm';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyChooseUsSection".
 */
export interface WhyChooseUsSection {
  /**
   * Small text appearing above the main title, often styled as a tag.
   */
  eyebrowText?: string | null;
  /**
   * Select a background color for the eyebrow text pill.
   */
  eyebrowBackgroundColor?:
    | (
        | 'bg-brandTheme-01'
        | 'bg-brandTheme-02'
        | 'bg-brandTheme-03'
        | 'bg-brandTheme-04'
        | 'bg-brandNeutral-01'
        | 'bg-brandNeutral-02'
      )
    | null;
  title: string;
  subTitle?: string | null;
  /**
   * This image will appear to the right of the title and subtitle on medium screens and up. It will be hidden on mobile.
   */
  titleImage?: (string | null) | Media;
  cards?:
    | {
        icon: string | Media;
        /**
         * Select a theme color for the icon background.
         */
        iconBackgroundColor?:
          | ('bg-brandTheme-01' | 'bg-brandTheme-02' | 'bg-brandTheme-03' | 'bg-brandTheme-04')
          | null;
        cardTitle: string;
        cardText: string;
        /**
         * If checked, the card will have a colored background (using the Icon Background Color) and the icon will have a white background.
         */
        invertStyle?: boolean | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'WhyChooseUsSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * Organize pages into hierarchical categories.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  /**
   * A unique identifier for the page, used in the URL.
   */
  slug: string;
  parent?: (string | null) | Category;
  sort?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Pages for the wiki section.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wiki-pages".
 */
export interface WikiPage {
  id: string;
  title: string;
  /**
   * A unique identifier for the page, used in the URL.
   */
  slug: string;
  category?: (string | null) | Category;
  pageBuilder: ContentBlock[];
  status: 'draft' | 'published';
  /**
   * Order in navigation (lower numbers appear first).
   */
  sort?: number | null;
  /**
   * If true, this page acts as the main page for its category/section.
   */
  isSectionHomepage?: boolean | null;
  parent?: (string | null) | WikiPage;
  /**
   * Optional icon name for navigation display.
   */
  icon?: string | null;
  /**
   * Background color for the icon circle. Select "None" for no background.
   */
  iconBackgroundColor?:
    | (
        | 'none'
        | 'bg-brandTheme-01'
        | 'bg-brandTheme-02'
        | 'bg-brandTheme-03'
        | 'bg-brandTheme-04'
        | 'bg-pink-light'
        | 'bg-purple-light'
      )
    | null;
  backgroundSettings?: {
    /**
     * Optional background image for the page.
     */
    backgroundImage?: (string | null) | Media;
    /**
     * Select a background color for the header area.
     */
    backgroundOverlay?:
      | (
          | 'default-gradient'
          | 'brandTheme-01'
          | 'brandTheme-02'
          | 'brandTheme-03'
          | 'brandTheme-04'
          | 'brandNeutral-01'
          | 'brandNeutral-02'
          | 'brandNeutral-03'
          | 'brandNeutral-04'
          | 'light-grey'
        )
      | null;
  };
  /**
   * Optimize your page for search engines and social sharing.
   */
  meta?: {
    /**
     * Custom title for search engines. If blank, the page title will be used.
     */
    title?: string | null;
    /**
     * Brief description of this page for search results and social sharing.
     */
    description?: string | null;
    /**
     * Image used when sharing this page on social media (1200×630px recommended).
     */
    image?: (string | null) | Media;
    /**
     * If checked, this page will not be indexed by search engines.
     */
    noIndex?: boolean | null;
    /**
     * The type of content this page represents (for structured data).
     */
    schemaType?: ('Article' | 'WebPage' | 'FAQPage' | 'Product' | 'Service' | 'Organization') | null;
    /**
     * Comma-separated keywords (optional).
     */
    keywords?: string | null;
    /**
     * Automatically generated Schema.org JSON-LD markup. Can be overridden if needed.
     */
    jsonLD?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Pages for the registry section.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "registry-pages".
 */
export interface RegistryPage {
  id: string;
  title: string;
  /**
   * A unique identifier for the page, used in the URL.
   */
  slug: string;
  category?: (string | null) | Category;
  pageBuilder: ContentBlock[];
  status: 'draft' | 'published';
  /**
   * Order in navigation (lower numbers appear first).
   */
  sort?: number | null;
  /**
   * If true, this page acts as the main page for its category/section.
   */
  isSectionHomepage?: boolean | null;
  parent?: (string | null) | RegistryPage;
  /**
   * Optional icon name for navigation display.
   */
  icon?: string | null;
  /**
   * Background color for the icon circle. Select "None" for no background.
   */
  iconBackgroundColor?:
    | (
        | 'none'
        | 'bg-brandTheme-01'
        | 'bg-brandTheme-02'
        | 'bg-brandTheme-03'
        | 'bg-brandTheme-04'
        | 'bg-pink-light'
        | 'bg-purple-light'
      )
    | null;
  backgroundSettings?: {
    /**
     * Optional background image for the page.
     */
    backgroundImage?: (string | null) | Media;
    /**
     * Select a background color for the header area.
     */
    backgroundOverlay?:
      | (
          | 'default-gradient'
          | 'brandTheme-01'
          | 'brandTheme-02'
          | 'brandTheme-03'
          | 'brandTheme-04'
          | 'brandNeutral-01'
          | 'brandNeutral-02'
          | 'brandNeutral-03'
          | 'brandNeutral-04'
          | 'light-grey'
        )
      | null;
  };
  /**
   * Optimize your page for search engines and social sharing.
   */
  meta?: {
    /**
     * Custom title for search engines. If blank, the page title will be used.
     */
    title?: string | null;
    /**
     * Brief description of this page for search results and social sharing.
     */
    description?: string | null;
    /**
     * Image used when sharing this page on social media (1200×630px recommended).
     */
    image?: (string | null) | Media;
    /**
     * If checked, this page will not be indexed by search engines.
     */
    noIndex?: boolean | null;
    /**
     * The type of content this page represents (for structured data).
     */
    schemaType?: ('Article' | 'WebPage' | 'FAQPage' | 'Product' | 'Service' | 'Organization') | null;
    /**
     * Comma-separated keywords (optional).
     */
    keywords?: string | null;
    /**
     * Automatically generated Schema.org JSON-LD markup. Can be overridden if needed.
     */
    jsonLD?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Navigation data cache for different sections of the site.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation-cache".
 */
export interface NavigationCache {
  id: string;
  section: 'wiki' | 'registry';
  /**
   * JSON structure of the navigation (automatically generated)
   */
  navigationData:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  lastGenerated?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'web-pages';
        value: string | WebPage;
      } | null)
    | ({
        relationTo: 'wiki-pages';
        value: string | WikiPage;
      } | null)
    | ({
        relationTo: 'registry-pages';
        value: string | RegistryPage;
      } | null)
    | ({
        relationTo: 'navigation-cache';
        value: string | NavigationCache;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  parent?: T;
  sort?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "web-pages_select".
 */
export interface WebPagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
        schemaType?: T;
        keywords?: T;
        jsonLD?: T;
      };
  layout?:
    | T
    | {
        content?: T | ContentBlockSelect<T>;
        imageBlock?:
          | T
          | {
              image?: T;
              caption?: T;
              width?: T;
              alignment?: T;
              id?: T;
              blockName?: T;
            };
        featureSection?: T | FeatureSectionSelect<T>;
        clientLogos?: T | ClientLogosBlockSelect<T>;
        solutionsList?: T | SolutionsListBlockSelect<T>;
        aiSupportSection?: T | AiSupportSectionBlockSelect<T>;
        supportNinjaSection?: T | SupportNinjaSectionBlockSelect<T>;
        textImageSection?: T | TextImageSectionBlockSelect<T>;
        approachTabs?:
          | T
          | {
              title?: T;
              tabs?:
                | T
                | {
                    tabTitle?: T;
                    steps?: T;
                    id?: T;
                  };
              link?:
                | T
                | {
                    text?: T;
                    url?: T;
                  };
              sectionBackgroundColor?: T;
              contentBackgroundColor?: T;
              containerWidth?: T;
              id?: T;
              blockName?: T;
            };
        customizedApproach?:
          | T
          | {
              sectionBackgroundColor?: T;
              contentBackgroundColor?: T;
              containerWidth?: T;
              title?: T;
              description?: T;
              approachTabsData?:
                | T
                | {
                    approachTabs?:
                      | T
                      | {
                          title?: T;
                          tabs?:
                            | T
                            | {
                                tabTitle?: T;
                                steps?: T;
                                id?: T;
                              };
                          link?:
                            | T
                            | {
                                text?: T;
                                url?: T;
                              };
                          sectionBackgroundColor?: T;
                          contentBackgroundColor?: T;
                          containerWidth?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        caseStudySection?:
          | T
          | {
              title?: T;
              caseStudies?:
                | T
                | {
                    image?: T;
                    title?: T;
                    link?: T;
                    bgColor?: T;
                    id?: T;
                  };
              sectionBackgroundColor?: T;
              containerWidth?: T;
              removeTopPadding?: T;
              removeBottomPadding?: T;
              id?: T;
              blockName?: T;
            };
        ctaSection?:
          | T
          | {
              ctaSubTitle?: T;
              ctaTitle?: T;
              ctaButtons?:
                | T
                | {
                    text?: T;
                    url?: T;
                    style?: T;
                    id?: T;
                  };
              sectionBackgroundColor?: T;
              contentBackgroundColor?: T;
              containerWidth?: T;
              id?: T;
              blockName?: T;
            };
        productFeatures?: T | ProductFeaturesBlockSelect<T>;
        sectorsSection?: T | SectorsSectionBlockPayloadSelect<T>;
        scheduleCallSection?: T | ScheduleCallBlockPayloadSelect<T>;
        pricingCards?: T | PricingCardsBlockSelect<T>;
        featureComparisonTable?: T | FeatureComparisonTableBlockSelect<T>;
        home03Hero?: T | Home03HeroBlockSelect<T>;
        brandLogos?: T | BrandLogosBlockSelect<T>;
        benefitsSection?: T | BenefitsSectionBlockSelect<T>;
        faqSection?: T | FaqSectionBlockSelect<T>;
        dashboardSection?: T | DashboardSectionBlockV2Select<T>;
        whatMakesUsDifferentSection?:
          | T
          | {
              eyebrow?: T;
              title?: T;
              description?: T;
              cards?:
                | T
                | {
                    icon?: T;
                    iconBackgroundColor?: T;
                    cardTitle?: T;
                    cardDescription?: T;
                    additionalCardImages?:
                      | T
                      | {
                          imageFile?: T;
                          altText?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        integrationsSection?:
          | T
          | {
              eyebrow?: T;
              title?: T;
              description?: T;
              titleImage?: T;
              logos?:
                | T
                | {
                    logoImage?: T;
                    altText?: T;
                    backgroundColorClass?: T;
                    id?: T;
                  };
              button?:
                | T
                | {
                    text?: T;
                    url?: T;
                    variant?: T;
                  };
              id?: T;
              blockName?: T;
            };
        testimonialsSection?: T | TestimonialsSectionBlockSelect<T>;
        featuresWithIntroSection?: T | FeaturesWithIntroSectionBlockSelect<T>;
        heroSection02?: T | HeroSection02PayloadSelect<T>;
        WhyChooseUsSection?:
          | T
          | {
              eyebrowText?: T;
              eyebrowBackgroundColor?: T;
              title?: T;
              subTitle?: T;
              titleImage?: T;
              cards?:
                | T
                | {
                    icon?: T;
                    iconBackgroundColor?: T;
                    cardTitle?: T;
                    cardText?: T;
                    invertStyle?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        HeroBlogCard?: T | HeroBlogCardBlockSelect<T>;
        RecentArticles?: T | RecentArticlesBlockSelect<T>;
        ContactForm?: T | ContactFormBlockSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureSection_select".
 */
export interface FeatureSectionSelect<T extends boolean = true> {
  sectionBackgroundColor?: T;
  contentBackgroundColor?: T;
  containerWidth?: T;
  superTitle?: T;
  title?: T;
  titleStyle?: T;
  description?: T;
  image?: T;
  button?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
      };
  includeButton?: T;
  removeBottomPadding?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ClientLogosBlock_select".
 */
export interface ClientLogosBlockSelect<T extends boolean = true> {
  sectionBackgroundColor?: T;
  contentBackgroundColor?: T;
  containerWidth?: T;
  title?: T;
  logos?:
    | T
    | {
        logo?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SolutionsListBlock_select".
 */
export interface SolutionsListBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  sectionImage?: T;
  solutions?:
    | T
    | {
        iconName?: T;
        solutionTitle?: T;
        solutionDescription?: T;
        link?:
          | T
          | {
              text?: T;
              url?: T;
            };
        id?: T;
      };
  sectionBackgroundColor?: T;
  contentBackgroundColor?: T;
  containerWidth?: T;
  removeTopPadding?: T;
  removeBottomPadding?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AiSupportSectionBlock_select".
 */
export interface AiSupportSectionBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  benefits?:
    | T
    | {
        title?: T;
        description?: T;
        id?: T;
      };
  link?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
      };
  checkmarkIconName?: T;
  characterImage?: T;
  sectionBackgroundColor?: T;
  contentBackgroundColor?: T;
  containerWidth?: T;
  imagePosition?: T;
  reduceTopPadding?: T;
  reduceBottomPadding?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SupportNinjaSectionBlock_select".
 */
export interface SupportNinjaSectionBlockSelect<T extends boolean = true> {
  sectionBackgroundColor?: T;
  contentBackgroundColor?: T;
  containerWidth?: T;
  title?: T;
  description?: T;
  image?: T;
  ctaButton?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextImageSectionBlock_select".
 */
export interface TextImageSectionBlockSelect<T extends boolean = true> {
  sectionBackgroundColor?: T;
  contentBackgroundColor?: T;
  removeTopPadding?: T;
  removeBottomPadding?: T;
  title?: T;
  titleStyle?: T;
  description?: T;
  image?: T;
  imagePosition?: T;
  imageBackgroundColor?: T;
  buttons?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductFeaturesBlock_select".
 */
export interface ProductFeaturesBlockSelect<T extends boolean = true> {
  sectionBackgroundColor?: T;
  imageColumnBackgroundColor?: T;
  containerWidth?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  defaultImage?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectorsSectionBlockPayload_select".
 */
export interface SectorsSectionBlockPayloadSelect<T extends boolean = true> {
  sectionBackgroundColor?: T;
  contentBackgroundColor?: T;
  containerWidth?: T;
  content?:
    | T
    | {
        superTitle?: T;
        title?: T;
        description?: T;
        ctaText?: T;
        ctaUrl?: T;
      };
  sectors?:
    | T
    | {
        title?: T;
        image?: T;
        iconName?: T;
        backgroundColor?: T;
        href?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ScheduleCallBlockPayload_select".
 */
export interface ScheduleCallBlockPayloadSelect<T extends boolean = true> {
  sectionBackgroundColor?: T;
  containerWidth?: T;
  reduceTopPadding?: T;
  reduceBottomPadding?: T;
  infoColumn?:
    | T
    | {
        infoColumnLogo?: T;
        infoColumnHeaderLink?:
          | T
          | {
              text?: T;
              url?: T;
            };
        infoColumnMainTitlePart1?: T;
        infoColumnMainTitlePart2?: T;
        infoColumnTitleContainerDesktopHeight?: T;
        infoColumnFooterText?: T;
        infoColumnFooterLinks?:
          | T
          | {
              text?: T;
              url?: T;
              id?: T;
            };
      };
  formColumn?:
    | T
    | {
        formTitle?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingCardsBlock_select".
 */
export interface PricingCardsBlockSelect<T extends boolean = true> {
  eyebrowText?: T;
  title?: T;
  description?: T;
  headerImage?: T;
  enableBillingToggle?: T;
  sectionBackgroundColor?: T;
  removeTopPadding?: T;
  removeBottomPadding?: T;
  plans?:
    | T
    | {
        name?: T;
        description?: T;
        monthlyPrice?: T;
        annualPrice?: T;
        priceSuffix?: T;
        cardBackgroundColor?: T;
        ctaButtonLabel?: T;
        ctaButtonLink?: T;
        isMostPopular?: T;
        planSpecificFeatures?:
          | T
          | {
              featureText?: T;
              isIncluded?: T;
              tooltip?: T;
              id?: T;
            };
        id?: T;
      };
  sectionCtaText?: T;
  sectionCtaLink?: T;
  sectionCtaStyle?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureComparisonTableBlock_select".
 */
export interface FeatureComparisonTableBlockSelect<T extends boolean = true> {
  eyebrowText?: T;
  title?: T;
  description?: T;
  headerImage?: T;
  sectionBackgroundColor?: T;
  removeTopPadding?: T;
  removeBottomPadding?: T;
  planHeaders?:
    | T
    | {
        name?: T;
        isMostPopular?: T;
        id?: T;
      };
  sharedFeatures?:
    | T
    | {
        featureName?: T;
        plan1Availability?: T;
        plan1CustomText?: T;
        plan2Availability?: T;
        plan2CustomText?: T;
        plan3Availability?: T;
        plan3CustomText?: T;
        tooltip?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Home03HeroBlock_select".
 */
export interface Home03HeroBlockSelect<T extends boolean = true> {
  taglinePrefix?: T;
  taglineSuffix?: T;
  headline?: T;
  subheadline?: T;
  formPlaceholder?: T;
  formButtonText?: T;
  imageTopLeft?: T;
  imageTopRight?: T;
  imageCenter?: T;
  imageBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLogosBlock_select".
 */
export interface BrandLogosBlockSelect<T extends boolean = true> {
  title?: T;
  logos?:
    | T
    | {
        logoImage?: T;
        altText?: T;
        id?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BenefitsSectionBlock_select".
 */
export interface BenefitsSectionBlockSelect<T extends boolean = true> {
  eyebrow?: T;
  title?: T;
  description?: T;
  benefitCards?:
    | T
    | {
        cardType?: T;
        contentTitle?: T;
        contentDescription?: T;
        contentImages?:
          | T
          | {
              image?: T;
              altText?: T;
              id?: T;
            };
        counterValue?: T;
        counterText?: T;
        counterDescription?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqSectionBlock_select".
 */
export interface FaqSectionBlockSelect<T extends boolean = true> {
  eyebrow?: T;
  eyebrowBackgroundColor?: T;
  titleImage?: T;
  title?: T;
  description?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DashboardSectionBlockV2_select".
 */
export interface DashboardSectionBlockV2Select<T extends boolean = true> {
  eyebrowText?: T;
  eyebrowBackgroundColor?: T;
  title?: T;
  description?: T;
  primaryButton?:
    | T
    | {
        text?: T;
        url?: T;
      };
  image?: T;
  stats?:
    | T
    | {
        icon?: T;
        label?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsSectionBlock_select".
 */
export interface TestimonialsSectionBlockSelect<T extends boolean = true> {
  eyebrowText?: T;
  titleImage?: T;
  title?: T;
  description?: T;
  caseStudies?:
    | T
    | {
        quoteTitle?: T;
        quote?: T;
        authorName?: T;
        authorImage?: T;
        authorRole?: T;
        companyLogo?: T;
        companyLogoBackgroundColor?: T;
        readMoreLink?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesWithIntroSectionBlock_select".
 */
export interface FeaturesWithIntroSectionBlockSelect<T extends boolean = true> {
  sectionBackgroundColor?: T;
  contentBackgroundColor?: T;
  removeTopPadding?: T;
  removeBottomPadding?: T;
  introContent?:
    | T
    | {
        superTitle?: T;
        eyebrowBackgroundColor?: T;
        title?: T;
        description?: T;
        titleImage?: T;
      };
  featureItems?:
    | T
    | {
        title?: T;
        titleStyle?: T;
        description?: T;
        image?: T;
        imagePosition?: T;
        imageBackgroundColor?: T;
        buttons?:
          | T
          | {
              text?: T;
              url?: T;
              style?: T;
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroSection02Payload_select".
 */
export interface HeroSection02PayloadSelect<T extends boolean = true> {
  eyebrowText?: T;
  heading?: T;
  subheading?: T;
  buttons?:
    | T
    | {
        label?: T;
        variant?: T;
        type?: T;
        internalLink?: T;
        externalLink?: T;
        newTab?: T;
        id?: T;
      };
  heroImage?: T;
  arrowButtonText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlogCardBlock_select".
 */
export interface HeroBlogCardBlockSelect<T extends boolean = true> {
  animationId?: T;
  categoryText?: T;
  title?: T;
  excerpt?: T;
  image?: T;
  buttonText?: T;
  link?:
    | T
    | {
        type?: T;
        label?: T;
        internalLink?: T;
        externalLink?: T;
        newTab?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecentArticlesBlock_select".
 */
export interface RecentArticlesBlockSelect<T extends boolean = true> {
  eyebrowText?: T;
  eyebrowBackgroundColor?: T;
  title?: T;
  subTitle?: T;
  articles?:
    | T
    | {
        image?: T;
        eyebrowText?: T;
        articleEyebrowBackgroundColor?: T;
        articleTitle?: T;
        articleExcerpt?: T;
        buttonText?: T;
        link?:
          | T
          | {
              type?: T;
              label?: T;
              internalLink?: T;
              externalLink?: T;
              newTab?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactFormBlock_select".
 */
export interface ContactFormBlockSelect<T extends boolean = true> {
  contentEyebrow?: T;
  contentTitle?: T;
  contentDescription?: T;
  contentImage?: T;
  contentImagePosition?: T;
  formTitle?: T;
  recipientEmail?: T;
  submitButtonText?: T;
  showNameField?: T;
  requireNameField?: T;
  showCompanyField?: T;
  requireCompanyField?: T;
  showSubjectField?: T;
  requireSubjectField?: T;
  showMessageField?: T;
  requireMessageField?: T;
  messageFieldLabel?: T;
  privacyPolicyText?: T;
  link?:
    | T
    | {
        type?: T;
        label?: T;
        internalLink?: T;
        externalLink?: T;
        newTab?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wiki-pages_select".
 */
export interface WikiPagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  category?: T;
  pageBuilder?:
    | T
    | {
        content?: T | ContentBlockSelect<T>;
      };
  status?: T;
  sort?: T;
  isSectionHomepage?: T;
  parent?: T;
  icon?: T;
  iconBackgroundColor?: T;
  backgroundSettings?:
    | T
    | {
        backgroundImage?: T;
        backgroundOverlay?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
        schemaType?: T;
        keywords?: T;
        jsonLD?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "registry-pages_select".
 */
export interface RegistryPagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  category?: T;
  pageBuilder?:
    | T
    | {
        content?: T | ContentBlockSelect<T>;
      };
  status?: T;
  sort?: T;
  isSectionHomepage?: T;
  parent?: T;
  icon?: T;
  iconBackgroundColor?: T;
  backgroundSettings?:
    | T
    | {
        backgroundImage?: T;
        backgroundOverlay?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
        schemaType?: T;
        keywords?: T;
        jsonLD?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation-cache_select".
 */
export interface NavigationCacheSelect<T extends boolean = true> {
  section?: T;
  navigationData?: T;
  lastGenerated?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  ctaEnable?: boolean | null;
  ctaPreTitle?: string | null;
  ctaEyebrowBackgroundColor?:
    | (
        | 'theme-color-01'
        | 'theme-color-02'
        | 'theme-color-03'
        | 'theme-color-04'
        | 'purple'
        | 'green'
        | 'yellow'
        | 'purple-light'
        | 'default'
      )
    | null;
  ctaTitle?: string | null;
  ctaDescription?: string | null;
  ctaButtonText?: string | null;
  ctaButtonLink?: string | null;
  /**
   * Optional: Image displayed in the CTA section, typically on the right.
   */
  ctaImage?: (string | null) | Media;
  logo?: (string | null) | Media;
  tagline?: string | null;
  linkColumns?:
    | {
        title: string;
        links?:
          | {
              text: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  subscribePlaceholder?: string | null;
  newsletterTitle?: string | null;
  socialLinks?:
    | {
        /**
         * Enter the Phosphor Icon name (e.g., TwitterLogo, LinkedinLogo). Do not include "Ph".
         */
        iconName: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  copyright: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  ctaEnable?: T;
  ctaPreTitle?: T;
  ctaEyebrowBackgroundColor?: T;
  ctaTitle?: T;
  ctaDescription?: T;
  ctaButtonText?: T;
  ctaButtonLink?: T;
  ctaImage?: T;
  logo?: T;
  tagline?: T;
  linkColumns?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              text?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
  subscribePlaceholder?: T;
  newsletterTitle?: T;
  socialLinks?:
    | T
    | {
        iconName?: T;
        url?: T;
        id?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}